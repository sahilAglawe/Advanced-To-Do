{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\Attachments\\\\To-do\\\\frontend\\\\src\\\\context\\\\TaskContext.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskProvider = ({\n  children\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch all tasks when component loads\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    const res = await axios.get('/api/tasks');\n    setTasks(res.data.data);\n  };\n  const addTask = async task => {\n    await axios.post('/api/tasks', task);\n    fetchTasks(); // Refresh the task list after adding\n  };\n\n  // ... keep other functions the same\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      addTask\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n_s(TaskProvider, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["TaskProvider","children","_s","tasks","setTasks","useState","useEffect","fetchTasks","res","axios","get","data","addTask","task","post","_jsxDEV","TaskContext","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/Attachments/To-do/frontend/src/context/TaskContext.js"],"sourcesContent":["const TaskProvider = ({ children }) => {\r\n    const [tasks, setTasks] = useState([]);\r\n    \r\n    // Fetch all tasks when component loads\r\n    useEffect(() => {\r\n      fetchTasks();\r\n    }, []);\r\n  \r\n    const fetchTasks = async () => {\r\n      const res = await axios.get('/api/tasks');\r\n      setTasks(res.data.data);\r\n    };\r\n  \r\n    const addTask = async (task) => {\r\n      await axios.post('/api/tasks', task);\r\n      fetchTasks(); // Refresh the task list after adding\r\n    };\r\n  \r\n    // ... keep other functions the same\r\n  \r\n    return (\r\n      <TaskContext.Provider value={{ tasks, addTask }}>\r\n        {children}\r\n      </TaskContext.Provider>\r\n    );\r\n  };"],"mappings":";;;AAAA,MAAMA,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACdC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,YAAY,CAAC;IACzCN,QAAQ,CAACI,GAAG,CAACG,IAAI,CAACA,IAAI,CAAC;EACzB,CAAC;EAED,MAAMC,OAAO,GAAG,MAAOC,IAAI,IAAK;IAC9B,MAAMJ,KAAK,CAACK,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC;IACpCN,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;;EAED;;EAEA,oBACEQ,OAAA,CAACC,WAAW,CAACC,QAAQ;IAACC,KAAK,EAAE;MAAEf,KAAK;MAAES;IAAQ,CAAE;IAAAX,QAAA,EAC7CA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACpB,EAAA,CAzBEF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}